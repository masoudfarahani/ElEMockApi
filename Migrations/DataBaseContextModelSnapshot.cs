// <auto-generated />
using System;
using ELE.MockApi.Core.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ELE.MockApi.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ELE.MockApi.Core.Models.MockEndpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("HttpMethod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rule")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Endpoints");
                });

            modelBuilder.Entity("ELE.MockApi.Core.Models.MockEndpoint", b =>
                {
                    b.OwnsMany("ELE.MockApi.Core.Models.AvailableResponse", "Responses", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Body")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("MockEndpointId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("MockEndpointId");

                            b1.ToTable("AvailableResponse");

                            b1.WithOwner()
                                .HasForeignKey("MockEndpointId");
                        });

                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
